<template>
    
    <div class="page" data-name="about">
      <div class="navbar">
        <div class="navbar-bg"></div>
        <div class="navbar-inner sliding">
          <div class="left">
            <a href="#" class="link back">
              <i class="icon icon-back"></i>
              <span class="if-not-md">Back</span>
            </a>
          </div>
          <div class="title">${mealObject.name}</div>
        </div>
      </div>
      <div class="page-content">
        <div class="block-title">Details</div>
        <div class="block block-strong">
          <p>${mealObject.description}</p>
          <p>${priceView(mealObject.price)}</p>
          <p>${mealObject.averageRating}</p>
        </div>
        <div class="block-title">Comments</div>
        <div class="block block-strong">
          <a href="#" class="col button button-raised button-fill popup-open" data-popup="#commentPopup"  >
            New Comment
          </a>
          <div class="list">
            <ul>
              ${mealObject.comments.map((c) =>$h`
                <li>
                  <div class="item-content">
                    <div class="item-inner">
                      <div class="item-title">
                        <div class="item-header" innerHTML=${global.ratingToStars(c.rating)}></div>
                        ${c.comment}
                        <div class="item-footer"></div>
                      </div>
                    </div>  
                  </div>
                </li>
              `)}
            </ul>
          </div>
        </div>
      </div>
    </div>
</template>
<script>
import global from "../js/globals.js";
export default (props, { $f7, $, $f7route, $update, $on }) => {
  let pK = $f7route.params.id;
  global.setId(pK);
  let mealObject = global.getOffers().filter(m => m.id == pK)[0];
  function priceView(rn){
    if(rn == null){
      return "";
    }
    return (rn/100).toFixed(2) + ' â‚¬';
  }

  const ratingToStars = (rating) => {
    let filledStars = 0;
    let halfFilledStars = 0;
    let emptyStars =5;

    if (rating == null){
      return {"filledStars" : 0,"halfFilledStars": 0,"emptyStars":0};
    }else{
      filledStars = parseInt(rating.toFixed(1));
      let delta = (rating - filledStars);
      //<=0.25 ~ kein stern <=0.75 ~ halber stern >0.75 ~stern
      if (delta > (0.75)) {
        filledStars += 1
      }else if(delta > (0.25)){
        halfFilledStars = 1
      }
      emptyStars = 5 - filledStars - halfFilledStars;
    }

    //console.log ({"filledStars" : filledStars,"halfFilledStars": halfFilledStars,"emptyStars":emptyStars});
    return {"filledStars" : filledStars,"halfFilledStars": halfFilledStars,"emptyStars":emptyStars};
  }

  
  $('#commentPopup').on('popup:close', function (e) {
    $update();
  });
  
  $on('pageInit', (e, page) => {

  });
          


  

  return $render;
};
</script>