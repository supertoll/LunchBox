<template>
	<div  class="page" data-name="welcome">
  	<div class="navbar">
			<div class="block block-strong"><b>Willkommen bei der neuen Lunchbox-App der Informatik-AG!</b></div>
		</div>

		<div class="page-content">
			<div class="block block-strong">
				<div class="list no-hairlines no-hairlines-between inset">
					<ul>
						<li>
							<p>Wähle zunächst deinen bevorzugten Standort</p>
						</li>
						<li>
							<label class="item-radio item-content">
								<input type="radio" name="loc" value="Neubrandenburg" @click=${changeLoc} checked/>
								<i class="icon icon-radio"></i>
								<div class="item-inner">
									<div class="item-title">Neubrandenburg</div>
								</div>
							</label>
						</li>
						${locs["locations"].map((ll) => $h`
						<li>
							<label class="item-radio item-content">
								<input type="radio" name="loc" value=${ll} @click=${changeLoc}/>
								<i class="icon icon-radio"></i>
								<div class="item-inner">
									<div class="item-title">${ll}</div>
								</div>
							</label>
						</li>
						`)}
						<li>
							<p>Optional kannst du die Farbwahl bestimmen</p>
						</li>
						<li>
							<div class="item-content">
								<div class="item-inner">
									<div class="item-title">Dark Mode</div>
									<div class="item-after">
										<label class="toggle toggle-init themeToggle">
											<input type="checkbox" @click=${changeColorTheme} name="toggleTheme" />
											<span class="toggle-icon"></span>
										</label>
									</div>
								</div>
							</div>
						</li> 
						<li>
							<p><b><u>Disclaimer</u></b>: Jegliche Angebote und Preise sind <b>ohne Gewähr</b>.</p>
						</li>
					</ul>
				</div>
			</div>
		</div>

		<div class="toolbar toolbar-bottom bg-color-primary">
				<div class="item-content item-input">
					<div class="item-inner">
						<a href="#" @click="${isReady}" class="col button align-self-stretch button-fill link">
							Fertig
						</a>
					</div>
				</div>
		</div>
	</div>
</template>
<script>
	import global from '/js/globals.js';
	export default async (props, { $f7, $, $app, $update, $on }) => {
		//await global.initLocation();
  	//let locs = global.getLocations();
	global.setDarkTheme(false);
    global.saveSettings();
		let locs = {
                "locations":[
                    "Berlin Springpfuhl",
                    "Neubrandenburg"
                ]
            }
		locs["locations"].splice(locs["locations"].indexOf("Neubrandenburg"))
		global.setLocation("Neubrandenburg");

		const changeLoc = (e) => {
    	global.setLocation(e.target.value);
		}

    const changeColorTheme = () => {
      $('body').toggleClass("theme-dark");
    
      console.log(global.getDarkTheme());
      global.setDarkTheme(Boolean(global.getDarkTheme() ^ true))
      console.log(global.getDarkTheme());

      global.saveSettings();
    }
    const isReady = () => {
      global.saveSettings();
			localStorage.setItem("first", "done");
      location.reload();

    }
		return $render;
	}
</script>